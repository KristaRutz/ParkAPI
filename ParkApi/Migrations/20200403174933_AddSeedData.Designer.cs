// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ParkApi.Models;

namespace ParkApi.Migrations
{
    [DbContext(typeof(ParkApiContext))]
    [Migration("20200403174933_AddSeedData")]
    partial class AddSeedData
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("ParkApi.Models.Park", b =>
                {
                    b.Property<int>("ParkId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description");

                    b.Property<string>("Location");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<int>("StateId");

                    b.Property<string>("Type")
                        .IsRequired();

                    b.HasKey("ParkId");

                    b.HasIndex("StateId");

                    b.ToTable("Parks");

                    b.HasData(
                        new
                        {
                            ParkId = 1,
                            Description = "Forest of Redwooods",
                            Location = "Del Norte",
                            Name = "Redwood National Park",
                            StateId = 1,
                            Type = "national"
                        },
                        new
                        {
                            ParkId = 2,
                            Description = "Rock Monaliths",
                            Location = "Salinas Valley",
                            Name = "Pinnacles National Park",
                            StateId = 1,
                            Type = "national"
                        },
                        new
                        {
                            ParkId = 3,
                            Description = "Forest of Sequoias",
                            Location = "Visalia",
                            Name = "Sequoia National Park",
                            StateId = 1,
                            Type = "national"
                        },
                        new
                        {
                            ParkId = 4,
                            Description = "Mountain of Diablo Range",
                            Location = "Contra Costa",
                            Name = "Mount Diablo State Park",
                            StateId = 1,
                            Type = "state"
                        },
                        new
                        {
                            ParkId = 5,
                            Description = "Many ecosystems",
                            Location = "Olympic Penninsula",
                            Name = "Olympic National Park",
                            StateId = 2,
                            Type = "national"
                        },
                        new
                        {
                            ParkId = 6,
                            Description = "Cascades Mountain",
                            Location = "Snohomish County",
                            Name = "Mount Pilchuck State Park",
                            StateId = 2,
                            Type = "state"
                        },
                        new
                        {
                            ParkId = 7,
                            Description = "First national park",
                            Location = "Wyoming, Montana, Idaho",
                            Name = "Yellowstone National Park",
                            StateId = 3,
                            Type = "national"
                        },
                        new
                        {
                            ParkId = 8,
                            Description = "Tide pools, caves, water tubes",
                            Location = "Maui",
                            Name = "Waianapanapa State Park",
                            StateId = 4,
                            Type = "state"
                        },
                        new
                        {
                            ParkId = 9,
                            Description = "Recreational activities, camping",
                            Location = "Leavenworth",
                            Name = "Lake Wenatchee State Park",
                            StateId = 2,
                            Type = "state"
                        });
                });

            modelBuilder.Entity("ParkApi.Models.State", b =>
                {
                    b.Property<int>("StateId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<int>("NumberParks");

                    b.HasKey("StateId");

                    b.ToTable("States");

                    b.HasData(
                        new
                        {
                            StateId = 1,
                            Name = "California",
                            NumberParks = 4
                        },
                        new
                        {
                            StateId = 2,
                            Name = "Washington",
                            NumberParks = 3
                        },
                        new
                        {
                            StateId = 3,
                            Name = "Wyoming",
                            NumberParks = 1
                        },
                        new
                        {
                            StateId = 4,
                            Name = "Hawaii",
                            NumberParks = 1
                        });
                });

            modelBuilder.Entity("ParkApi.Models.Park", b =>
                {
                    b.HasOne("ParkApi.Models.State", "State")
                        .WithMany("Parks")
                        .HasForeignKey("StateId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
